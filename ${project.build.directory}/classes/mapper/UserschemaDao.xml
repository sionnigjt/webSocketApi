<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.websocketapi.dao.UserschemaDao">

    <resultMap id="BaseResultMap" type="com.api.websocketapi.entity.Userschema">
        <!--@Table userSchema-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="phone" column="phone" jdbcType="INTEGER"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="registerTime" column="register_time" jdbcType="TIMESTAMP"/>
        <result property="signature" column="signature" jdbcType="VARCHAR"/>
        <result property="imgUrl" column="img_url" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="name" type="java.lang.String">
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="Id" type="java.lang.Integer">
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="url" type="java.lang.String">
        <result  column="img_url" jdbcType="VARCHAR"/>
    </resultMap>
    <!--查询url-->
    <select id="getUrlById" resultMap="url">
        select
               img_url
        from userSchema
        where id = #{id}
    </select>
    <!--查询单个-->
    <select id="selectByUsername" resultMap="BaseResultMap">
        select id,
               name,
               email,
               gender,
               birthday,
               phone,
               password,
               register_time,
               signature,
               img_url
        from userSchema
        where name = #{username}
    </select>
    <!--查询姓名-->
    <select id="getNameById" resultMap="name">
        select   name
        from userSchema
        where id = #{id}
    </select>
    <!--查询姓名-->
    <select id="getIdByName" resultMap="Id">
        select   id
        from userSchema
        where name = #{name}
    </select>
    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select id,
               name,
               email,
               gender,
               birthday,
               phone,
               password,
               register_time,
               signature,
               img_url
        from userSchema
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
        id, name, email, gender, birthday, phone, password, register_time, signature, img_url
        from userSchema
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="registerTime != null">
                and register_time = #{registerTime}
            </if>
            <if test="signature != null and signature != ''">
                and signature = #{signature}
            </if>
            <if test="imgUrl != null and imgUrl != ''">
                and img_url = #{imgUrl}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
    select
    id, name, email, gender, birthday, phone, password, register_time, signature, img_url
    from api.userSchema
   </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from userSchema
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="registerTime != null">
                and register_time = #{registerTime}
            </if>
            <if test="signature != null and signature != ''">
                and signature = #{signature}
            </if>
            <if test="imgUrl != null and imgUrl != ''">
                and img_url = #{imgUrl}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into userSchema(name, email, gender, birthday, phone, password, register_time, signature, img_url)
        values (#{name}, #{email}, #{gender}, #{birthday}, #{phone}, #{password}, #{registerTime}, #{signature},
                #{imgUrl})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into userSchema(name, email, gender, birthday, phone, password, register_time, signature, img_url)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.email}, #{entity.gender}, #{entity.birthday}, #{entity.phone}, #{entity.password},
            #{entity.registerTime}, #{entity.signature}, #{entity.imgUrl})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into userSchema(name, email, gender, birthday, phone, password, register_time, signature, img_url)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.email}, #{entity.gender}, #{entity.birthday}, #{entity.phone}, #{entity.password},
            #{entity.registerTime}, #{entity.signature}, #{entity.imgUrl})
        </foreach>
        on duplicate key update
        name = values(name),
        email = values(email),
        gender = values(gender),
        birthday = values(birthday),
        phone = values(phone),
        password = values(password),
        register_time = values(register_time),
        signature = values(signature),
        img_url = values(img_url)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update userSchema
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="registerTime != null">
                register_time = #{registerTime},
            </if>
            <if test="signature != null and signature != ''">
                signature = #{signature},
            </if>
            <if test="imgUrl != null and imgUrl != ''">
                img_url = #{imgUrl},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from userSchema
        where id = #{id}
    </delete>

</mapper>

